apiVersion: v1
kind: Service
metadata:
  name: virtual-kubelet
  labels:
    app: virtual-kubelet
spec:
  ports:
  - port: 80
    name: virtual-kubelet
  clusterIP: None
  selector:
    app: virtual-kubelet
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: virtual-kubelet
  namespace: kube-system
  labels:
    app: virtual-kubelet
spec:
  serviceName: virtual-kubelet
  replicas: 1
  selector:
    matchLabels:
      app: virtual-kubelet
  template:
    metadata:
      labels:
        app: virtual-kubelet
        virtual-kubelet: ""
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: virtual-kubelet
                  operator: In
                  values:
                  - ""
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
      initContainers:
      - command:
        - bash
        - -c
        - mkdir -p $CERT_DIR && /opt/csr/get-cert.sh
        env:
        - name: NODE_NAME
          value: virtual-kubelet
        - name: CERT_DIR
          value: /data/kubelet-pki
        image: elotl/init-cert:latest
        imagePullPolicy: Always
        name: init-cert
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: data
      containers:
      - command:
        - /virtual-kubelet
        - --provider
        - kip
        - --provider-config
        - /etc/virtual-kubelet/provider.yaml
        - --network-agent-secret
        - kube-system/vk-network-agent
        - --disable-taint
        - --klog.logtostderr
        - --klog.v=2
        - --metrics-addr=:10255
        image: elotl/virtual-kubelet:latest
        imagePullPolicy: Always
        name: virtual-kubelet
        env:
        - name: KUBELET_PORT
          value: "10666"
        - name: APISERVER_CERT_LOCATION
          value: /opt/kip/data/kubelet-pki/virtual-kubelet.crt
        - name: APISERVER_KEY_LOCATION
          value: /opt/kip/data/kubelet-pki/virtual-kubelet.key
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        resources:
          limits:
            cpu: "2"
            memory: "1Gi"
          requests:
            cpu: "10m"
            memory: "100Mi"
        volumeMounts:
        - name: data
          mountPath: /opt/kip/data
        - name: provider-yaml
          mountPath: /etc/virtual-kubelet
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        securityContext:
          privileged: true
      - command:
        - /bin/sh
        - -c
        - exec kube-proxy --oom-score-adj=-998 --bind-address=127.0.0.1 --v=2
        image: k8s.gcr.io/kube-proxy:v1.18.3
        imagePullPolicy: IfNotPresent
        name: kube-proxy
        resources:
          requests:
            cpu: 100m
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: virtual-kubelet
      tolerations:
      - key: "node-role.kubernetes.io/master"
        effect: "NoSchedule"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: provider-data
      - name: provider-yaml
        configMap:
          name: virtual-kubelet-config
          items:
          - key: provider.yaml
            path: provider.yaml
            mode: 0600
      - name: xtables-lock
        hostPath:
          path: /run/virtual-kubelet-xtables.lock
          type: FileOrCreate
      - name: lib-modules
        hostPath:
          path: /lib/modules
          type: ""
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: 
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
